<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d" x:Name="proPresentation" x:Class="proPresentation.MainWindow"
        Title="ProPresentation" FocusVisualStyle="{x:Null}" ShowInTaskbar="True" FontFamily="DejaVu Sans" Height="768" Width="1366" KeyUp="proPresentation_KeyUp" WindowState="Maximized" KeyDown="proPresentation_KeyDown" Closing="proPresentation_Closing" Icon="Images\ProPresentation.ico" MouseUp="proPresentation_MouseUp">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Style1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
        </Style>
        <ControlTemplate x:Key="Style2" TargetType="{x:Type Button}">
            <Grid VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Margin="-3.819,0,3.819,0">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                        <SkewTransform AngleY="0" AngleX="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAFC5CD"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF28414D"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F8293"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Ellipse x:Name="ellipse" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="-25.75,-1.3,0,-2.7" Stroke="#FF004F66" VerticalAlignment="Top" Width="24" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Rectangle x:Name="rectangle" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="-13.5,-1.3,-2.5,-2.7" Stroke="#FF004F66" VerticalAlignment="Top" Width="43" RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Center" Height="22.7" Margin="-25.75,3,19.5,-5.7" TextWrapping="Wrap" VerticalAlignment="Center" Width="56.25" FontFamily="DejaVu Sans" TextDecorations="{x:Null}" TextAlignment="Center"><Run FontSize="13.333" Text="Play"/><LineBreak/><Run FontSize="13.333"/><LineBreak/><Run FontSize="20"/><LineBreak/><Run FontSize="20"/><LineBreak/><Run/></TextBlock>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="Pause" TargetType="{x:Type Button}">
            <Grid Margin="-29.27,-0.25,29.27,0.25">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAFC5CD"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF28414D"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F8293"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Ellipse x:Name="ellipse" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="16,-1.3,0,-2.7" Stroke="#FF004F66" VerticalAlignment="Top" Width="24" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Rectangle x:Name="rectangle" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="-13.5,-1.3,-2.5,-2.7" Stroke="#FF004F66" VerticalAlignment="Top" Width="43" RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Center" Height="22.7" Margin="-16.25,2.75,10,-5.45" TextWrapping="Wrap" VerticalAlignment="Center" Width="56.25" FontFamily="DejaVu Sans" TextDecorations="{x:Null}" TextAlignment="Center"><Run FontSize="13.333" Text="Pause"/></TextBlock>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="PlayAnotherMedia" TargetType="{x:Type Button}">
            <Grid Margin="-25.25,-0.25,25.25,0.25">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0*"/>
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAFC5CD"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF28414D"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2AB7E0"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F8293"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF003A4B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" 
					HorizontalAlignment="Center" 
					Height="22.7" Margin="-3.75,2.759,3.75,-5.459"  
					VerticalAlignment="Center" Width="150" FontFamily="DejaVu Sans" TextDecorations="{x:Null}" TextAlignment="Center" Panel.ZIndex="1" Grid.RowSpan="2" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run FontSize="13.333" Text="Open another video"/></TextBlock>
                <Path x:Name="ellipse_Copy" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="-5.75,-1,0,-3" Stroke="#FF004F66" VerticalAlignment="Top" Grid.RowSpan="2" Data="M12,0.5 C12.198478,0.50000018 12.395781,0.50502828 12.591788,0.51496342 L13.000001,0.54600468 13.000001,0.5 141.75,0.5 142.75,0.5 142.75,0.54600468 142.92581,0.55937341 C148.72475,1.1482887 153.25,6.0456806 153.25,12.000001 153.25,17.95432 148.72475,22.851712 142.92581,23.440627 L142.75,23.453995 142.75,23.500001 141.75,23.500001 13.000001,23.500001 13.000001,23.453995 12.591788,23.485037 C12.395781,23.494973 12.198478,23.500001 12,23.500001 5.6487255,23.500001 0.5,18.351275 0.5,12.000001 0.5,5.6487261 5.6487255,0.50000057 12,0.5 z" RenderTransformOrigin="0.5,0.500000011796752" Stretch="Fill" Width="153.75">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="OpenMediaTemplate" TargetType="{x:Type Button}">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Normal" GeneratedDuration="0:0:0.2"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.07"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.07"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="MiddleCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="MiddleCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF003338"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="11"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="TopCircle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="TopCircle">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF648AA4"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="TopCircle">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Ellipse x:Name="BottomCircle" Fill="#FF33B1CD" HorizontalAlignment="Left" Height="110" Margin="-2.244,-28.732,-7.756,-55.268" Stroke="#FF122968" VerticalAlignment="Top" Width="110" StrokeThickness="0"/>
                <Ellipse x:Name="MiddleCircle" Fill="#FF2984A6" HorizontalAlignment="Left" Height="110" Margin="-2.244,-28.732,-7.756,-55.268" Stroke="#FF124968" VerticalAlignment="Top" Width="110" StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <Ellipse x:Name="TopCircle" Fill="#FF1C4E70" HorizontalAlignment="Left" Height="110" Margin="-2.244,-28.732,-7.756,-55.268" Stroke="#FF143B55" VerticalAlignment="Top" Width="110" StrokeThickness="5" RenderTransformOrigin="0.5,0.5">
                    <Ellipse.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Ellipse.RenderTransform>
                </Ellipse>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Height="26" TextWrapping="Wrap" Text="Open Video" VerticalAlignment="Top" Width="90" FontFamily="DejaVu Sans" Margin="7.756,19.402,0,-19.402" Foreground="Black" FontSize="14.667" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SaveProjectButtonTemplate" TargetType="{x:Type Button}">
            <Grid HorizontalAlignment="Left" Height="35" Margin="-10.5,-5.5,-3,-2.5" VerticalAlignment="Top" Width="113.5">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Normal" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Normal"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="0.499999992130753,0.500000000016069"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="0.833465403038644,43.5000000000161"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-7"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4A83D4"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFCFD800"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="0.499999992130753,0.500000000016069"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="0.833465403038644,43.5000000000161"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-7"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="11"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF1F84BD"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5E6300"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Path x:Name="path" Fill="#FF6A91BF" HorizontalAlignment="Left" Height="45.667" Margin="20.343,-6.166,0,-4.501" Stretch="None" Stroke="#FF1F3CBD" VerticalAlignment="Top" Width="78.333">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="77.6658129886847,0.999505795504572">
                                <LineSegment Point="77.8333446571081,44.499590332412"/>
                                <LineSegment Point="1.16695333488506,35.4987897505849"/>
                                <LineSegment Point="1.16638650111195,15.4996991986976"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Height="20.166" Margin="41.667,6.002,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61" FontSize="20" Foreground="#FF4A4D09" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run FontFamily="DejaVu Sans" Text="Save"/></TextBlock>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="StartProjectBuottonTemplate" TargetType="{x:Type Button}">
            <Grid HorizontalAlignment="Left" Height="35" Margin="-32.226,-5.5,-21.274,-2.5" VerticalAlignment="Top" Width="113.5">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Normal" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Normal"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
            <Grid HorizontalAlignment="Left" Height="46.354" Margin="-15.491,-11.166,-1.056,-8.188" VerticalAlignment="Top" Width="76.547">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Normal" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Normal"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF6582A4"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="76.9513666564703,0.50380183634059"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="77.0139927468745,44.2137791572118"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="6.25"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4A83D4"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4AEA00"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="76.9513666564703,0.50000001420839"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="77.0139927468745,44.8604730619444"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="5.263"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Path x:Name="path" Fill="#FF5276A0" HorizontalAlignment="Left" Height="46.027" Margin="-0.968,0.029,0,0" Stroke="#FF1F3CBD" VerticalAlignment="Top" Width="77.515" StrokeThickness="1" Stretch="None">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="0.506460074702681,0.631382139317201">
                                <LineSegment Point="0.501008725301344,44.2244245482743"/>
                                <LineSegment Point="77.0139927468745,35.527139728612"/>
                                <LineSegment Point="76.9513666564703,15.8331655338697"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Height="20.166" Margin="7.417,12.752,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61" FontSize="20" Foreground="#FF004B07" RenderTransformOrigin="0.5,0.5" FontFamily="DejaVu Sans" Text="Start">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform></TextBlock>
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="LoopInputTextBoxTemplate" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2"/>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFB5EAF9"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFB5EAF9"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="PART_ContentHost">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <VisualStateManager.CustomVisualStateManager>
                                <ei:ExtendedVisualStateManager/>
                            </VisualStateManager.CustomVisualStateManager>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="LoopComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxNewTemplate" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0" d:IsHidden="True"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SetDataButtonTemplate" TargetType="{x:Type Button}">
            <Grid Margin="-62.588,-0.25,-17.475,0.25" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0*"/>
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAFC5CD"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF28414D"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2AB7E0"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F8293"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF003A4B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" 
					HorizontalAlignment="Center" 
					Height="22.7" Margin="-4.58,3.389,4.642,0.911"  
					VerticalAlignment="Center" Width="150.001" FontFamily="DejaVu Sans" TextDecorations="{x:Null}" TextAlignment="Center" Panel.ZIndex="1" Grid.RowSpan="1" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run FontSize="13.333" Text="Set Data"/></TextBlock>
                <Path x:Name="ellipse_Copy" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="33.851,-1,0,0" Stroke="#FF004F66" VerticalAlignment="Top" Grid.RowSpan="1" Data="M12,0.5 C12.198478,0.50000018 12.395781,0.50502828 12.591788,0.51496342 L13.000001,0.54600468 13.000001,0.5 141.75,0.5 142.75,0.5 142.75,0.54600468 142.92581,0.55937341 C148.72475,1.1482887 153.25,6.0456806 153.25,12.000001 153.25,17.95432 148.72475,22.851712 142.92581,23.440627 L142.75,23.453995 142.75,23.500001 141.75,23.500001 13.000001,23.500001 13.000001,23.453995 12.591788,23.485037 C12.395781,23.494973 12.198478,23.500001 12,23.500001 5.6487255,23.500001 0.5,18.351275 0.5,12.000001 0.5,5.6487261 5.6487255,0.50000057 12,0.5 z" RenderTransformOrigin="0.5,0.500000011796752" Stretch="Fill" Width="71.965">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SetCurrentFrameButtonTemplate" TargetType="{x:Type Button}">
            <Grid Margin="44.489,-0.25,-45.198,0.25">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0*"/>
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="Disabled" GeneratedDuration="0"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAFC5CD"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF28414D"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2CB9CF"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.05"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF2AB7E0"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5F8293"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF003A4B"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Copy">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF76B8CB"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" 
					HorizontalAlignment="Center" 
					Height="22.7" Margin="-3.75,2.759,3.75,-5.459"  
					VerticalAlignment="Center" Width="150" FontFamily="DejaVu Sans" TextDecorations="{x:Null}" TextAlignment="Center" Panel.ZIndex="1" Grid.RowSpan="2" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run FontSize="13.333" Text="Set Current Frame"/></TextBlock>
                <Path x:Name="ellipse_Copy" Fill="#FF004F66" HorizontalAlignment="Left" Height="24" Margin="-5.75,-1,0,-3" Stroke="#FF004F66" VerticalAlignment="Top" Grid.RowSpan="2" Data="M12,0.5 C12.198478,0.50000018 12.395781,0.50502828 12.591788,0.51496342 L13.000001,0.54600468 13.000001,0.5 141.75,0.5 142.75,0.5 142.75,0.54600468 142.92581,0.55937341 C148.72475,1.1482887 153.25,6.0456806 153.25,12.000001 153.25,17.95432 148.72475,22.851712 142.92581,23.440627 L142.75,23.453995 142.75,23.500001 141.75,23.500001 13.000001,23.500001 13.000001,23.453995 12.591788,23.485037 C12.395781,23.494973 12.198478,23.500001 12,23.500001 5.6487255,23.500001 0.5,18.351275 0.5,12.000001 0.5,5.6487261 5.6487255,0.50000057 12,0.5 z" RenderTransformOrigin="0.5,0.500000011796752" Stretch="Fill" Width="153.75">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="StopPresentationButton" TargetType="{x:Type Button}">
            <Grid HorizontalAlignment="Left" Height="46.354" Margin="-15.491,-11.166,-1.056,-8.188" VerticalAlignment="Top" Width="76.547">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Normal" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Normal"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF6582A4"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF5B1818"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="76.9513666564703,0.50380183634059"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="77.0139927468745,44.2137791572118"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="6.25"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF4A83D4"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFCB4E4E"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[2].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="76.9513666564703,0.50000001420839"/>
                                </PointAnimationUsingKeyFrames>
                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[1].(LineSegment.Point)" Storyboard.TargetName="path">
                                    <EasingPointKeyFrame KeyTime="0" Value="77.0139927468745,44.8604730619444"/>
                                </PointAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="5.263"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="textBlock">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF93CCDC"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF999292"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Path x:Name="path" Fill="#FF5276A0" HorizontalAlignment="Left" Height="46.027" Margin="-0.968,0.029,0,0" Stroke="#FF1F3CBD" VerticalAlignment="Top" Width="77.515" StrokeThickness="1" Stretch="None">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="0.506460074702681,0.631382139317201">
                                <LineSegment Point="0.501008725301344,44.2244245482743"/>
                                <LineSegment Point="77.0139927468745,35.527139728612"/>
                                <LineSegment Point="76.9513666564703,15.8331655338697"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Height="23.602" Margin="7.417,12.752,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="61" FontSize="20" Foreground="#FF004B07" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform><Run FontFamily="DejaVu Sans" Text="Stop"/></TextBlock>
            </Grid>
        </ControlTemplate>
        <Style x:Key="SelectAtoBFrame" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
        </Style>
        <ControlTemplate x:Key="AtoBFrame" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="atobframe" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid HorizontalAlignment="Left" Height="41.75" Margin="-2.25,-7.5,-6.5,-9.25" VerticalAlignment="Top" Width="50.75">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition From="Normal" GeneratedDuration="0:0:0.2"/>
        								<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
        								<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2"/>
        								<VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="Normal">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF349CA6"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF4B92B4"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF16556C"/>
        									</ColorAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ellipse">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ellipse">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="ellipse">
        										<EasingDoubleKeyFrame KeyTime="0" Value="5"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF16556C"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF9DC4D6"/>
        									</ColorAnimationUsingKeyFrames>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF75B0C5"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Ellipse x:Name="ellipse" Fill="#FF4B92B4" HorizontalAlignment="Left" Height="25" Margin="6.5,7.413,0,0" Stroke="#FF16556C" VerticalAlignment="Top" Width="25" StrokeThickness="4" RenderTransformOrigin="0.5,0.5">
        						<Ellipse.RenderTransform>
        							<TransformGroup>
        								<ScaleTransform/>
        								<SkewTransform/>
        								<RotateTransform/>
        								<TranslateTransform/>
        							</TransformGroup>
        						</Ellipse.RenderTransform>
        					</Ellipse>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true"/>
        					<Trigger Property="IsMouseOver" Value="true"/>
        					<Trigger Property="IsPressed" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false"/>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="newFile_Click" CanExecute="CanExecute"/>
        <CommandBinding Command="Open" Executed="openFile_Click" CanExecute="CanExecute"/>
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed" CanExecute="CanExecute"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsCommandBinding_Executed" CanExecute="CanExecute"/>
        <CommandBinding Command="Close" Executed="CloseCommandBinding_Executed"/>
        <CommandBinding Command="MediaCommands.Play" CanExecute="Play_CanExecute" Executed="Play_Executed" />
        <CommandBinding Command="MediaCommands.Pause" CanExecute="Pause_CanExecute" Executed="Pause_Executed" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control + Shift" Command="SaveAs"/>
    </Window.InputBindings>
    <ScrollViewer Name="scrollBar" 
                  HorizontalScrollBarVisibility="Auto"
		          VerticalScrollBarVisibility="Auto">
        
        <Grid x:Name="grid_Main" 
              HorizontalAlignment="Left" 
              Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
              Height="727" >
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="122*"/>
                <RowDefinition Height="79*" Name="Row4"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="511*"/>
                <ColumnDefinition Width="125*" Name="Column1"/>
            </Grid.ColumnDefinitions>

            <Menu Name="MenuBar" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=grid_Main}" Grid.ColumnSpan="2">
                <MenuItem Header="File">
                    <MenuItem x:Name="newFile" Header="New" Command="New" InputGestureText="Ctrl+N"/>
                    <MenuItem x:Name="openFile" Header="Open" Command="Open" InputGestureText="Ctrl+O"/>
                    <MenuItem x:Name="saveFile" Header="Save" Command="Save" InputGestureText="Ctrl+S"/>
                    <MenuItem x:Name="saveAsFile" Header="Save as" Command="SaveAs" InputGestureText="Ctrl+Shift+S"/>
                    <Separator/>
                    <MenuItem x:Name="openReverseVideoFile" Header="Open Reverse Video File" Click="openReverseVideoFile_Click"/>
                    <MenuItem x:Name="enabelReverseTransition" Header="Enable Reverse Transition" IsCheckable="True" IsChecked="False"/>
                    <Separator/>
                    <MenuItem Header="Exit" Command="Close" InputGestureText="Alt+F4"/>
                </MenuItem>
                <MenuItem Header="Help" >
                    <MenuItem Name="viewHelp" Header="View Help" Click="viewHelp_Click"/>
                    <MenuItem Name="about" Header="About" Click="about_Click"/>
                </MenuItem>
            </Menu>

            <TextBlock Grid.Column="1"
            	x:Name="InfoTextBox1"
            	Margin="40,56,40,24"
            	FontSize="16" 
            	Foreground="Black"
            	Visibility="Visible" 
            	Panel.ZIndex="1" Cursor="Arrow" FontFamily="DejaVu Sans"><Run Text="Please Create a &#xA;New file(Ctrl + N)&#xA;Or open an existing&#xA;file(Ctrl + O) to&#xA;continue. See &quot;Help&gt;"/><LineBreak/><Run Text="View Help&quot; For more"/><LineBreak/><Run Text="Information"/></TextBlock>

            <TextBlock Grid.Column="1"
				Grid.Row="1"
				x:Name="InfoTextBox2"
				Text="Please choose a &#xA;Video file(Open Video)&#xA;to continue"
				Margin="40,31,10,199"
				FontSize="16" 
				Foreground="#FF9E9E9E"
				Visibility="Visible" Panel.ZIndex="1" FontFamily="DejaVu Sans" Grid.RowSpan="2"/>

            <Border Name="RightBorder"
                Background="GhostWhite" 
				BorderBrush="Gainsboro" 
				BorderThickness="2" 
				Grid.Column="1" 
				Margin="10,25,10,10"
				Grid.RowSpan="5">

                <StackPanel Orientation="Vertical"
					Grid.Column="1"
					Grid.Row="0"
					HorizontalAlignment="left"
					Height="Auto"
					Width="200"
					Visibility="Hidden"
					x:Name="EnterLoopStackPanel">


                    <TextBlock Height="27"
						Width="180"
						Text="Enter no. of slides:"
						Margin="20,20,0,0" 
						FontSize="19.333" FontFamily="DejaVu Sans" Foreground="#FF035461"/>

                    <TextBox Height="27"
						Width="180"
						x:Name="LoopInput"
						Margin="20,10,0,0" 
						TextChanged="LoopInput_TextChanged"
						FontSize="17.333"
						VerticalContentAlignment="Center" FontFamily="DejaVu Sans" Style="{DynamicResource LoopInputTextBoxTemplate}"/>

                    <StackPanel Orientation="Horizontal"
						Grid.Column="1"
						Grid.Row="0"
						Height="Auto"
						Width="Auto">

                        <TextBlock Text="Slide no."
							Height="27"
							Width="100"
							FontSize="20"
							Margin="20,20,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch" Foreground="#FF035461" FontFamily="DejaVu Sans"/>

                        <ComboBox x:Name="LoopComboBox"
							Height="27"
							Width="40"
							Margin="10,20,0,0" 
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch" SelectionChanged="LoopComboBox_SelectionChanged" Style="{DynamicResource LoopComboBoxTemplate}"/>
                    </StackPanel>
                    
                </StackPanel>


            </Border>


            <Separator Name="Separator1" Grid.Column="1" Margin="16.5,0,16.5,119" Grid.Row="1"/>
            <Separator Name="Separator2" Grid.Column="1" Margin="16.5,0.041,16.5,194.958" Grid.Row="2" Height="5"/>
            <StackPanel Orientation="Vertical"
				Grid.Row="1"
				Grid.Column="1"
				Width="Auto"
				Height="Auto"
				Visibility="Hidden"
				x:Name="LoopTypeStackPanel" 
				Panel.ZIndex="1"
				Margin="10">

                <TextBlock Text="Slide type:"
					FontSize="20"
					Margin="20,10,0,0" Foreground="#FF035461" FontFamily="DejaVu Sans"/>

                <RadioButton x:Name="atobCheckbox"
					Content="A to B"
					FontSize="18"
					Margin="20,10,0,0"
					VerticalContentAlignment="Center"
					IsChecked="False"
					GroupName="loopOption" 
					Checked="atobCheckbox_Checked" Foreground="#FF035461" FontFamily="DejaVu Sans" Style="{DynamicResource CheckBoxNewTemplate}" />

                <RadioButton x:Name="singleFrame"
					Content="Single Frame"
					FontSize="18"
					Margin="20,10,0,0"
					VerticalContentAlignment="Center"
					IsChecked="False"
					GroupName="loopOption" 
					Checked="singleFrame_Checked" Foreground="#FF035461" FontFamily="DejaVu Sans" BorderBrush="#FF035461" Background="White" />

            </StackPanel>

            
            
            
            <StackPanel Orientation="Vertical"
				Height="Auto"
				Width="195"
				Grid.Row="2"
				Grid.Column="1"
				HorizontalAlignment="Left"
				VerticalAlignment="Stretch"
				x:Name="AtoBStack"
				Visibility="Hidden"
				Margin="10,0,0,0">

                <TextBlock Text = "Slide loop start time:"
					FontSize = "18"
					Margin="20,20,0,0" Foreground="#FF035461" FontFamily="DejaVu Sans"/>

                <StackPanel Orientation="Horizontal"
                            Height="Auto"
                            Width="Auto" Margin="0,0,-48,0" HorizontalAlignment="Left">

                    <TextBox x:Name="StartTimeTextBox"
							 Margin="20,10,10,10"
							 Height="25"
                             Width="155"
							 FontSize="14"
							 VerticalAlignment="Center" Style="{DynamicResource LoopInputTextBoxTemplate}" TextChanged="StartTimeTextBox_TextChanged" LostFocus="StartTimeTextBox_LostFocus"/>

                    <Button Name="SelectCurrentStartFrameButton" 
                            Content="Button" 
                            HorizontalAlignment="Left" 
                            Height="25" 
                            Margin="0,10,10,10" 
                            VerticalAlignment="Top" 
                            Width="42" Style="{DynamicResource atobframe}" 
							Click="SelectCurrentStartFrameButton_Click"
							FocusVisualStyle="{x:Null}"/>

                </StackPanel>

                <TextBlock Text = "Slide loop End time:"
					FontSize = "18"
					Margin="20,0,0,0" Foreground="#FF035461" FontFamily="DejaVu Sans"/>

                <StackPanel Orientation="Horizontal"
                            Width="243"
                            Height="Auto"
                            Margin="0,0,-48,0">
                    
                    <TextBox x:Name="EndTimeTextBox"
					         Margin="20,10,10,10"
					         Height="25"
					         FontSize="14"
                             Width="155"
					         VerticalAlignment="Center" Style="{DynamicResource LoopInputTextBoxTemplate}" TextChanged="EndTimeTextBox_TextChanged" LostFocus="EndTimeTextBox_LostFocus"/>

                    <Button Name="SelectCurrentEndFrameButton" 
                            Content="Button" 
                            HorizontalAlignment="Left" 
                            Height="25" 
                            Margin="0,10,10,10" 
                            VerticalAlignment="Top" 
                            Width="42" 
							Style="{DynamicResource atobframe}" 
							Click="SelectCurrentEndFrameButton_Click"
							FocusVisualStyle="{x:Null}"/>
                    
                </StackPanel>
                <Button x:Name="SetDataButton"
					    Content="Set Data"
					    FontSize="14"
					    HorizontalAlignment="Right"
					    Margin="5,15,0,0"
					    Width="70"
                        IsEnabled="False"
					    Height="27" 
						Click="SetDataButton_Click" 
						Template="{DynamicResource SetDataButtonTemplate}"
						FocusVisualStyle="{x:Null}"/>
            </StackPanel>

            <StackPanel Orientation="Vertical"
				x:Name="FrameStackPanel"
				Grid.Row="2"
				Grid.Column="1"
				Visibility="Hidden" >

                <Button Content="Select current frame"
						x:Name="SelectFrame"
						Width="150"
						FontSize="15" 
						Margin="2.684,50,0,0"
						HorizontalAlignment="Left" 
						Click="SelectFrame_Click"
						VerticalAlignment="Center" 
						Template="{DynamicResource SetCurrentFrameButtonTemplate}"
						FocusVisualStyle="{x:Null}"/>

                <TextBlock x:Name="FrameTimeTextBlock"
					Text="Frame time : not set"
					Margin="10.98,30,-1.1,0"
					FontSize="15" FontFamily="DejaVu Sans" Foreground="#FF035461"/>

            </StackPanel>

            <Border Name="MediaPlayerBorder"
                    Background="Black" 
				    BorderBrush="Gainsboro" 
				    BorderThickness="0" 
				    Margin="10,25,10,10"
				    Grid.RowSpan="4"
                    Panel.ZIndex="0"/>

            <MediaElement Grid.Column="0"
					      HorizontalAlignment="Center"
					      VerticalAlignment="Center"
					      Margin="10,25,10,10"
					      LoadedBehavior="Manual"
					      x:Name="mePlayer" 
					      Grid.Row="0" 
					      Grid.RowSpan="4"
					      MediaOpened="mePlayer_MediaOpened" 
                          IsMuted="True"
                          ScrubbingEnabled="True"
                          Panel.ZIndex="1"/>

            <MediaElement Grid.Column="0"
					      HorizontalAlignment="Center"
					      VerticalAlignment="Center"
					      Margin="10,25,10,10"
					      LoadedBehavior="Manual"
					      x:Name="mePlayerReverse" 
					      Grid.Row="0" 
					      Grid.RowSpan="4"
					      MediaOpened="mePlayer_MediaOpened" 
                          IsMuted="True"
                          ScrubbingEnabled="True"
                          Visibility="Hidden"/>

            <Button x:Name="OpenMediaButton"
				    Content="Open Video"
				    Grid.RowSpan="2"
				    FontSize="15" 
				    Click="OpenMediaButton_Click" 
				    VerticalAlignment="Center"
				    HorizontalAlignment="Center"
				    Width="100"
				    Height="26"
				    IsEnabled="False" 
                    Margin="494,103,495,194" 
                    Grid.Row="1" 
                    Template="{DynamicResource OpenMediaTemplate}"
					FocusVisualStyle="{x:Null}"/>

            <StackPanel 
                Name="BottomStackPanel"
                Orientation="Vertical"
				Grid.Column="0"
				Grid.Row="4"
				Width="Auto"
				Height="Auto">

                <Slider x:Name="PlayerSlider"
					Thumb.DragStarted="PlayerSlider_DragStarted"
					Thumb.DragCompleted="PlayerSlider_DragCompleted"
					ValueChanged="PlayerSlider_ValueChanged"
					Margin="20,0,0,10" Maximum="3" SmallChange="0.25"/>

                <Border Background="GhostWhite"
					    Grid.Row="5"
					    BorderBrush="Silver"
					    BorderThickness="2"
					    Margin="10,0,10,0"
					    CornerRadius="20"
                        Name="BottomBorder">
                    <StackPanel Orientation="Horizontal"
						            Margin="5">

                        <Button x:Name="PlayButton"
							Command="MediaCommands.Play"
							Content="Play"
							Height="20"
							Width="50"
							FontSize="12"
							VerticalContentAlignment="Center"
							Margin="30,0,0,0" 
							Click="PlayButton_Click" 
							FocusVisualStyle="{x:Null}"
							Style="{DynamicResource Style1}" Template="{DynamicResource Style2}" RenderTransformOrigin="0.5,0.5">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="-0.6"/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>

                        <Button x:Name="PauseButton"
							Command="MediaCommands.Pause"
							Content="Pause"
							Height="20"
							Width="50"
							FontSize="12"
							VerticalContentAlignment="Center"
							FocusVisualStyle="{x:Null}"
							Margin="30,0,0,0" Template="{DynamicResource Pause}" RenderTransformOrigin="0.5,0.5">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="-0.6"/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                        <Button x:Name="OpenAnotherMediaButton"
							Content="Open another Video"
							Height="20"
							Width="150"
							FontSize="12"
							VerticalContentAlignment="Center"
							Margin="30,0,0,0"
							Visibility="Hidden" 
							FocusVisualStyle="{x:Null}"
							Click="OpenMediaButton_Click" Template="{DynamicResource PlayAnotherMedia}" RenderTransformOrigin="0.5,0.5">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="-0.7"/>
                                </TransformGroup>
                            </Button.RenderTransform>
                        </Button>
                        <TextBlock x:Name="ProgressStatus"
                        	Text="00:00:00.000"
                        	HorizontalAlignment="Right" 
                        	Margin="600,0,0,0"
                        	FontSize="20"
                        	FontFamily="DejaVu Sans" Foreground="#FF035461"/>
                    </StackPanel>
                </Border>
            </StackPanel>

            <StackPanel Orientation="Horizontal"
				Grid.Column="1"
				Grid.Row="4"
               VerticalAlignment="Top">
                <Button x:Name="SaveProjectButton"
						Command="Save"
						Content="Save Project"
						Height="27"
						Width="100"
						FontSize="15"
						HorizontalAlignment="Right"
						Margin="30,10,20,0"
						IsEnabled="False"
						Template="{DynamicResource SaveProjectButtonTemplate}"
						FocusVisualStyle="{x:Null}"/>

                <Button x:Name="StartPresentationButton"
						Content="Start"
						Height="27"
						Width="60"
						FontSize="15"
						HorizontalAlignment="Right"
						Margin="20,10,30,0" 
						Click="StartPresentationButton_Click"
						Visibility="Visible"
						IsEnabled="False" 
						Template="{DynamicResource ButtonControlTemplate1}"
						FocusVisualStyle="{x:Null}"/>

                <Button x:Name="StopPresentationButton"
						Content="Start"
						Height="27"
						Width="60"
						FontSize="15"
						HorizontalAlignment="Right"
						Margin="20,0,30,0" 
						Click="StopPresentationButton_Click"
						Visibility="Collapsed"
						IsEnabled="True" 
						Template="{DynamicResource StopPresentationButton}" 
						Grid.Column="1" 
						Grid.Row="4"
						FocusVisualStyle="{x:Null}"/>

            </StackPanel>
        </Grid>
    </ScrollViewer>
</Window>
